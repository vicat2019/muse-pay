<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.seckill.dao.AlipayTransOrderMapper">
  <resultMap id="BaseResultMap" type="com.seckill.entity.AlipayTransOrder">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="out_trade_no" jdbcType="VARCHAR" property="outTradeNo" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="money" jdbcType="DECIMAL" property="money" />
    <result column="bank_account" jdbcType="VARCHAR" property="bankAccount" />
    <result column="card_no" jdbcType="VARCHAR" property="cardNo" />
    <result column="bank_mark" jdbcType="VARCHAR" property="bankMark" />
    <result column="real_money" jdbcType="DECIMAL" property="realMoney" />
    <result column="sms_content" jdbcType="VARCHAR" property="smsContent" />
    <result column="receive_sms_time" jdbcType="TIMESTAMP" property="receiveSmsTime" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, out_trade_no, amount, money, bank_account, card_no, bank_mark, real_money, sms_content, 
    receive_sms_time, status, version, modify_time, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bbb_alipay_trans_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bbb_alipay_trans_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.seckill.entity.AlipayTransOrder">
    insert into bbb_alipay_trans_order (id, out_trade_no, amount, 
      money, bank_account, card_no, 
      bank_mark, real_money, sms_content, 
      receive_sms_time, status, version, 
      modify_time, create_time)
    values (#{id,jdbcType=INTEGER}, #{outTradeNo,jdbcType=VARCHAR}, #{amount,jdbcType=DECIMAL}, 
      #{money,jdbcType=DECIMAL}, #{bankAccount,jdbcType=VARCHAR}, #{cardNo,jdbcType=VARCHAR}, 
      #{bankMark,jdbcType=VARCHAR}, #{realMoney,jdbcType=DECIMAL}, #{smsContent,jdbcType=VARCHAR}, 
      #{receiveSmsTime,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR}, #{version,jdbcType=INTEGER}, 
      #{modifyTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.seckill.entity.AlipayTransOrder">
    insert into bbb_alipay_trans_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="outTradeNo != null">
        out_trade_no,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="bankAccount != null">
        bank_account,
      </if>
      <if test="cardNo != null">
        card_no,
      </if>
      <if test="bankMark != null">
        bank_mark,
      </if>
      <if test="realMoney != null">
        real_money,
      </if>
      <if test="smsContent != null">
        sms_content,
      </if>
      <if test="receiveSmsTime != null">
        receive_sms_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="outTradeNo != null">
        #{outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="money != null">
        #{money,jdbcType=DECIMAL},
      </if>
      <if test="bankAccount != null">
        #{bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="cardNo != null">
        #{cardNo,jdbcType=VARCHAR},
      </if>
      <if test="bankMark != null">
        #{bankMark,jdbcType=VARCHAR},
      </if>
      <if test="realMoney != null">
        #{realMoney,jdbcType=DECIMAL},
      </if>
      <if test="smsContent != null">
        #{smsContent,jdbcType=VARCHAR},
      </if>
      <if test="receiveSmsTime != null">
        #{receiveSmsTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.seckill.entity.AlipayTransOrderExample" resultType="java.lang.Long">
    select count(*) from bbb_alipay_trans_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.seckill.entity.AlipayTransOrder">
    update bbb_alipay_trans_order
    <set>
      <if test="outTradeNo != null">
        out_trade_no = #{outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=DECIMAL},
      </if>
      <if test="bankAccount != null">
        bank_account = #{bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="cardNo != null">
        card_no = #{cardNo,jdbcType=VARCHAR},
      </if>
      <if test="bankMark != null">
        bank_mark = #{bankMark,jdbcType=VARCHAR},
      </if>
      <if test="realMoney != null">
        real_money = #{realMoney,jdbcType=DECIMAL},
      </if>
      <if test="smsContent != null">
        sms_content = #{smsContent,jdbcType=VARCHAR},
      </if>
      <if test="receiveSmsTime != null">
        receive_sms_time = #{receiveSmsTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.seckill.entity.AlipayTransOrder">
    update bbb_alipay_trans_order
    set out_trade_no = #{outTradeNo,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=DECIMAL},
      money = #{money,jdbcType=DECIMAL},
      bank_account = #{bankAccount,jdbcType=VARCHAR},
      card_no = #{cardNo,jdbcType=VARCHAR},
      bank_mark = #{bankMark,jdbcType=VARCHAR},
      real_money = #{realMoney,jdbcType=DECIMAL},
      sms_content = #{smsContent,jdbcType=VARCHAR},
      receive_sms_time = #{receiveSmsTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR},
      version = #{version,jdbcType=INTEGER},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>