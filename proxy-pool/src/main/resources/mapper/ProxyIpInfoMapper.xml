<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.proxypool.dao.ProxyIpInfoMapper">
    <resultMap id="BaseResultMap" type="com.proxypool.entry.ProxyIpInfo">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="ip" jdbcType="VARCHAR" property="ip"/>
        <result column="port" jdbcType="VARCHAR" property="port"/>
        <result column="type" jdbcType="VARCHAR" property="type"/>
        <result column="response_speed" jdbcType="VARCHAR" property="responseSpeed"/>
        <result column="location" jdbcType="VARCHAR" property="location"/>
        <result column="last_check_time" jdbcType="VARCHAR" property="lastCheckTime"/>
        <result column="anonymous" jdbcType="VARCHAR" property="anonymous"/>
        <result column="survival_time" jdbcType="VARCHAR" property="survivalTime"/>
        <result column="country" jdbcType="VARCHAR" property="country"/>
        <result column="code" jdbcType="VARCHAR" property="code"/>
        <result column="source" jdbcType="VARCHAR" property="source"/>
        <result column="success_count" jdbcType="INTEGER" property="successCount"/>
        <result column="check_count" jdbcType="INTEGER" property="checkCount"/>
        <result column="last_success_time" jdbcType="TIMESTAMP" property="lastSuccessTime"/>

        <result column="status" jdbcType="VARCHAR" property="status"/>
        <result column="del_status" jdbcType="INTEGER" property="delStatus"/>

        <result column="version" jdbcType="INTEGER" property="version"/>
        <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, ip, port, type, response_speed, location, last_check_time, anonymous, survival_time,
        country, code, status, source, success_count, check_count, last_success_time, del_status, version, modify_time, create_time
      </sql>

    <sql id="table_name">
        t_proxy_ip
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="table_name"/>
        where id = #{id,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from
        <include refid="table_name"/>
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <insert id="insert" parameterType="com.proxypool.entry.ProxyIpInfo">
        insert into
        <include refid="table_name"/>
        (ip, port,
        type, response_speed, location,
        last_check_time, anonymous, survival_time,
        country, code, source)
        values (#{ip,jdbcType=VARCHAR}, #{port,jdbcType=VARCHAR},
        #{type,jdbcType=VARCHAR}, #{responseSpeed,jdbcType=VARCHAR}, #{location,jdbcType=VARCHAR},
        #{lastCheckTime,jdbcType=VARCHAR}, #{anonymous,jdbcType=VARCHAR}, #{survivalTime,jdbcType=VARCHAR},
        #{country,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, #{source,jdbcType=VARCHAR})
    </insert>

    <update id="updateByPrimaryKey" parameterType="com.proxypool.entry.ProxyIpInfo">
        update
        <include refid="table_name"/>
        set ip = #{ip,jdbcType=VARCHAR},
        port = #{port,jdbcType=VARCHAR},
        response_speed = #{responseSpeed,jdbcType=VARCHAR},
        last_check_time = #{lastCheckTime,jdbcType=VARCHAR},
        anonymous = #{anonymous,jdbcType=VARCHAR},
        survival_time = #{survivalTime,jdbcType=VARCHAR},
        status = #{status,jdbcType=VARCHAR},
        success_count = #{successCount, jdbcType=INTEGER},
        check_count = #{checkCount, jdbcType=INTEGER},
        last_success_time = #{lastSuccessTime},
        version = version+1,
        modify_time = now()
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="getAllProxyCode" resultType="string">
        select code from
        <include refid="table_name"/>
    </select>

    <select id="queryProxy" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="table_name"/>
        where del_status=0
        order by response_speed
    </select>

    <update id="delProxyIpSoft">
        update
        <include refid="table_name"/>
        set del_status=1
        where id in
        <foreach collection="list" close=")" open="(" separator="," item="id">
            #{id}
        </foreach>
    </update>


    <!-- 获取响应时间最短的前150条记录 -->
    <select id="getFrontProxy" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="table_name"/>
        where status='SUCCESS' and type='HTTPS'
        order by response_speed limit 150
    </select>

    <select id="getRepeatProxy" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        <include refid="table_name"/>
        WHERE CODE IN (SELECT CODE FROM t_proxy_ip GROUP BY CODE HAVING COUNT(*)>1)
        order by ip, create_time
    </select>

    <delete id="delProxyByIds">
        delete from
        <include refid="table_name"/>
        where id in
        <foreach collection="list" close=")" open="(" separator="," item="id">
            #{id}
        </foreach>
    </delete>

    <select id="getCountByIp" resultType="int">
        select count(1) as total from <include refid="table_name"/> where ip=#{ip, jdbcType=VARCHAR}
    </select>

    <select id="getUsableProxyIp" parameterType="int" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="table_name"/>
        WHERE STATUS='SUCCESS'
        order by response_speed limit ${size}
    </select>

    <update id="updateStatusInfo" parameterType="com.proxypool.entry.ProxyIpInfo">
        update
        <include refid="table_name"/>
        set
        last_check_time = now(),
        <if test="status == 'SUCCESS'">
            success_count = success_count+1,
            last_success_time = now(),
        </if>
        <if test="status == 'FAIL'">
            success_count = success_count+1,
        </if>
        check_count = check_count+1,
        version = version+1,
        modify_time = now()
        where ip = #{ip,jdbcType=VARCHAR}
    </update>


</mapper>